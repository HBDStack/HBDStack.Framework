name: .NET

on:
  push:
    branches: [*]

env:
  Project_Path: 'HBDStack.Framework.sln'
  Is_Main_Branch: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
  Enable_Release: ${{ env.Is_Main_Branch }}
  Enable_Nuget_Release: ${{ env.Is_Main_Branch }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.x
          #global-json-file: global.json

      # Build
      - name: Ensure GitHub NuGet Source
        run: |
          dotnet nuget add source 'https://nuget.pkg.github.com/baoduy/index.json' \
          -n github -u baoduy2412 -p ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text

      - name: Restore dependencies
        run: dotnet restore ${{ env.Project_Path }}
      - name: Build
        run: dotnet build ${{ env.Project_Path }} --no-restore --configuration Release
      - name: Test
        run: dotnet test ${{ env.Project_Path }} --verbosity normal
        continue-on-error: true

      # Versioning
      - name: Get version and version code
        if: ${{ env.Is_Main_Branch }}
        uses: xom9ikk/version-by-tag@v1
        id: versioning
        with:
          isUseGithubRunNumber: true

      - uses: actions-ecosystem/action-bump-semver@v1
        if: ${{ env.Is_Main_Branch }}
        id: bump-semver
        with:
          current_version: ${{ steps.versioning.outputs.semver }}
          level: patch

      - name: Print Version
        if: ${{ env.Is_Main_Branch }}
        run: |
          echo "Tag: ${{ steps.versioning.outputs.tag }}"
          echo "Semver: ${{ steps.versioning.outputs.semver }}"
          echo "Version code: ${{ steps.versioning.outputs.versionCode }}"
          echo "New version: ${{ steps.bump-semver.outputs.new_version }}"

      #- name: Environment Printer
      #  uses: managedkaos/print-env@v1.0

      # Package
      - name: Package
        if: ${{ env.Is_Main_Branch }}
        run: dotnet pack ${{ env.Project_Path }} --no-build --no-restore --configuration Release --output ${{ runner.WORKSPACE }}/nupkgs -p:PackageVersion=${{ steps.bump-semver.outputs.new_version }}
      - name: Zip Release
        if: ${{ env.Is_Main_Branch }}
        uses: TheDoctor0/zip-release@0.6.2
        with:
          # Filename for archive
          filename: release.zip
          # Base path for archive files
          # path: ${{ runner.WORKSPACE }}/nupkgs
          directory: ${{ runner.WORKSPACE }}/nupkgs

      # Push nuget packages to Github Repository
      - name: Publish
        if: ${{ env.Enable_Release }}
        run: dotnet nuget push ${{ runner.WORKSPACE }}/nupkgs/*.nupkg --skip-duplicate --source github --api-key ${{ secrets.PACKAGE_TOKEN }}

      # Create Release
      - name: Create Release
        id: create_release
        if: ${{ env.Enable_Release }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
        with:
          tag_name: ${{ steps.bump-semver.outputs.new_version }}
          release_name: Release ${{ steps.bump-semver.outputs.new_version }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        if: ${{ env.Enable_Release }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ runner.WORKSPACE }}/nupkgs/release.zip
          asset_name: release.zip
          asset_content_type: application/zip

      # Publish to NUGET.ORG
      - name: Publish Nuget
        if: ${{ env.Enable_Nuget_Release }}
        run: dotnet nuget push ${{ runner.WORKSPACE }}/nupkgs/*.nupkg --skip-duplicate --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_PACKAGE_TOKEN }}